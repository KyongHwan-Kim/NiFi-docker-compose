
[Nifi Workflow Scenario]
1. 개요 (Description)
강원도 횡성군의 한 도매시장에서는 매일 오전 7시경 한우 소도체 경매가 진행된다.
경매는 오전 8시경 마무리되며, 경매의 결과는 오전 9시경 날짜명의 CSV파일로 기록되어 저장된다.
공공기관 A에서는 CSV에 기록된 데이터를 기반으로 소도체 경매현황을 조회하는 웹 어플리케이션을 제작하고자 한다.
이를 위해, A는 협력업체 B에게 해당 CSV 데이터를 DB에 적합한 형태*로 저장하는 프로세스의 구현을 요청했다. [*적합한 형태: 후에 서술]
데드라인은 2주 후이며, B는 내부회의 끝에 이를 Nifi로 구성하기로 결정했다. 

"당신은 협력업체 B의 개발자이다."

2. 시나리오 목표 (Objectives)
- 특정 시간에 생성되는 CSV 데이터를 시나리오가 요구하는 DB에 적합한 형태로 저장

3. 시나리오 요구 조건 (Requirements)

- 오전 10시전에는 해당 데이터 저장이 완료되어야 한다.
- 프로젝트 데드라인은 2주이다.
		
3. 기본 흐름 (Main Flow)

	2) CSV 데이터 Validation (*4. 세부흐름 참고)
	3) 데이터 값의 Valid / Invalid 여부로 분기 처리
		3-1) Valid한 값 cattle_auction_data 테이블에 저장
		3-2) Invalid한 값 cattle_auction_invalid_data 테이블에 저장
	4) 실행 Log 저장 (validation_log 테이블)
	5) 완성된 Workflow Template으로 저장.
	
4. 세부 흐름
	1) CSV 파일 생성 확인
	: CSV 파일은 매일 오전 9시에 생성되며 생성된 당일의 날짜명으로 명명된다. (형식: yyyyMMdd)
	2) CSV 데이터 Validation
	: CSV 파일의 각 항목은 각 데이터 형식에 알맞은 값을 지녀야 한다.
		- A열: 문자열
		- B열: 문자열
		- C열: 문자열
		- D열: 숫자
	3-1) Valid한 값 cattle_auction_data 테이블에 저장
		- cattle_auction_data 테이블은 CSV파일명과 CSV파일의 A-D열 데이터를 각각 다른 컬럼으로 저장하여야 한다.
	3-2) Invalid한 값 cattle_auction_invalid_data 테이블에 저장
		- cattle_auction_invalid_data 테이블은 CSV파일명과 CSV파일의 A-D열의 데이터를 각각 다른 컬럼으로 저장하여야 한다.
	4) 실행 Log 저장
		- validation_log 테이블은 id를 sequence로 가져야하며, csv 파일명, 3-1), 3-2)에서 사용된 SQL 문과 SQL문이 실행된 시간을 (timestamp) 모두 저장해야 한다.
	5) Template 저장시 Template 명을 'Nifi-workflow.xml'로 할 것.
5.
